name: "Build on Windows"

on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  CACHE_VERSION: "2023-04-25"
  BOOST_VERSION: "1.82.0"
  CMAKE_GENERATOR: "Visual Studio 17 2022"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        architecture: [ "arm64", "x64" ]
        include:
          - architecture: arm64
            CMAKE_GENERATOR_PLATFORM: "ARM64EC"
          - architecture: x64
            CMAKE_GENERATOR_PLATFORM: "x64"
    runs-on: "windows-2022"
    name: "Windows (${{ matrix.architecture }})"
    env:
      cache_name: "${{ env.CACHE_VERSION }}-windows-${{ matrix.architecture }}"
      CMAKE_GENERATOR_PLATFORM: "${{ matrix.CMAKE_GENERATOR_PLATFORM }}"
    steps:
    - name: "Clone"
      uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

# Boost Library
    - name: "Boost (Cache)"
      uses: actions/cache@v2
      with:
        path: '${{ runner.workspace }}/third-party/boost'
        key: '${{ env.cache_name }}-boost-${{ env.BOOST_VERSION }}-'
    - name: Boost
      shell: bash
      run: |
        if [ ! -d "${{ runner.workspace }}/third-party/boost" ]; then
          if [ ! -f "${{ runner.workspace }}/third-party/boost.7z" ]; then
            curl --retry 10 --retry--all-errors -o "${{ runner.workspace }}/third-party/boost.7z" "https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VERSION}/source/boost_${BOOST_VERSION//./_}.7z"
          fi
          7z x -o"${{ runner.workspace }}/third-party/boost" "${{ runner.workspace }}/third-party/boost.7z"
        fi
        if [ ! -f "${{ runner.workspace }}/third-party/boost/b2.exe" ]; then
          cd "${{ runner.workspace }}/third-party/boost"
          ./bootstrap.bat
          ./b2.exe variant=release link=static runtime-link=static threading=multi
        fi

    - name: "Configure"
      continue-on-error: true
      shell: bash
      run: |
        cmake \
          -S "${{ github.workspace }}" \
          -B "${{ github.workspace }}/build/devel" \
          -DCMAKE_PREFIX_PATH="${{ runner.workspace }}/third-party/boost" \
          -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/build/distrib"

    - name: "Build"
      continue-on-error: true
      shell: bash
      env:
        CMAKE_BUILD_TYPE: "RelWithDebInfo"
      run: |
        cmake --build "build/devel" --config ${{ env.CMAKE_BUILD_TYPE }} --target install

    - name: "Artifacts"
      uses: actions/upload-artifact@v1
      with:
        name: "windows-${{ matrix.architecture }}"
        path: "${{ github.workspace }}/build/distrib"
